import React, { useState } from 'react';
import styles from './Header.module.css';
import arrowBack from "../../../photos/pngwing.com.png";
import { useNavigate } from "react-router-dom";
import logo from "../../../photos/logo.png";
import bell from "../../../photos/bell.png";
import { Notifications, Notification as NotificationType } from "../../../utils/Notifications.tsx";
import { authService } from "../../../hooks/AuthService.tsx";

interface HeaderProps {
    variant?: 'default' | 'back';
}

export const Header: React.FC<HeaderProps> = ({ variant = 'default' }) => {
    const navigate = useNavigate();
    const [showNotifications, setShowNotifications] = useState(false);
    const isAuthenticated = authService.isAuthenticated();

    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —É–∫–∞–∑–∞–Ω–∏–µ–º, –∏–º–µ—é—Ç –ª–∏ –æ–Ω–∏ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    const initialNotifications: NotificationType[] = [
        {
            id: 1,
            type: 'achievement',
            text: '–í—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–Ω–∞—á–æ–∫ "–°–∞–º—ã–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–±–æ—Ç–Ω–∏–∫"',
            date: '12.04.2025',
            read: false,
            icon: 'üèÜ',
            hasActions: false // –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ —É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö
        },
        {
            id: 2,
            type: 'task',
            text: '–£ –í–∞—Å –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –≤ –ø—Ä–æ–µ–∫—Ç–µ "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫—Ä–∏—á–∫–∞ "–ö–∞–∫–æ–π —Ç—ã –∫—Ä–∏–ø—Å —Å–µ–≥–æ–¥–Ω—è?"',
            date: '11.04.2025',
            read: false,
            hasActions: true // –£ –∑–∞–¥–∞—á –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        },
        {
            id: 3,
            type: 'project',
            text: '–í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –≤ –ø—Ä–æ–µ–∫—Ç "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫—Ä–∏—á–∫–∞ "–ö–∞–∫–æ–π —Ç—ã –∫—Ä–∏–ø—Å —Å–µ–≥–æ–¥–Ω—è?"',
            date: '15.04.2025',
            read: false,
            hasActions: true // –£ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –≤ –ø—Ä–æ–µ–∫—Ç –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        }
    ];

    const [notificationsList, setNotificationsList] = useState<NotificationType[]>(initialNotifications);

    // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const toggleNotifications = () => {
        setShowNotifications(!showNotifications);
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–Ω—è—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const handleAcceptNotification = (id: number) => {
        console.log(`–ü—Ä–∏–Ω—è—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ${id}`);

        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        setNotificationsList(prev =>
            prev.filter(notification => notification.id !== id)
        );

        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–æ–≤ API –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        // –ù–∞–ø—Ä–∏–º–µ—Ä, axios.post('/api/notifications/accept', { id });
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const handleDeclineNotification = (id: number) => {
        console.log(`–û—Ç–∫–ª–æ–Ω–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ${id}`);

        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        setNotificationsList(prev =>
            prev.filter(notification => notification.id !== id)
        );

        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–æ–≤ API –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        // –ù–∞–ø—Ä–∏–º–µ—Ä, axios.post('/api/notifications/decline', { id });
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–Ω–∞–∑–∞–¥'
    const handleBack = () => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
        if (window.history.length > 1) {
            navigate(-1);
        } else {
            // –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            navigate('/');
        }
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
    const handleLogout = () => {
        authService.logout();
        navigate('/');
    };

    return (
        <header className={styles.headerFixed}>
            <div className={styles.headerContent}>
                {variant === 'back' ? (
                    <button onClick={handleBack} className={styles.backButton}>
                        <img src={arrowBack} alt="Back" className={styles.backIcon} />
                        <span>–ù–∞–∑–∞–¥</span>
                    </button>
                ) : (
                    <>
                        <div className={styles.leftGroup}>
                            <img onClick={() => navigate('/')} src={logo} alt="DEV SYNC" className={styles.logo}/>
                            <nav className={styles.nav}>
                                <button onClick={() => navigate('/create-project')} className={styles.link}>
                                    –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
                                </button>
                                <button onClick={() => navigate('/faq')} className={styles.link}>
                                    FAQ
                                </button>
                            </nav>
                        </div>
                        {isAuthenticated && (
                            <div className={styles.right}>
                                <button
                                    className={styles.bell}
                                    onClick={toggleNotifications}
                                >
                                    <img src={bell} alt="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"/>
                                </button>
                                <button onClick={handleLogout}>–í—ã–π—Ç–∏</button>
                                <button
                                    className={styles.profile}
                                    onClick={() => navigate('/profile')}
                                >
                                    –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                                </button>

                                <Notifications
                                    notifications={notificationsList}
                                    visible={showNotifications}
                                    onAccept={handleAcceptNotification}
                                    onDecline={handleDeclineNotification}
                                    onClose={() => setShowNotifications(false)}
                                />
                            </div>
                        )}

                        {!isAuthenticated && (
                            <button
                                className={styles.profile}
                                onClick={() => navigate('/login')}
                            >
                                –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                            </button>
                        )}
                    </>
                )}
            </div>
        </header>
    );
};